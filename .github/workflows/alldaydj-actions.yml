name: alldaydj-actions
on: [push]

env:
  ADDJ_SECRET_KEY: ${{ secrets.ADDJ_SECRET_KEY }}
  ADDJ_DB_NAME: alldaydj
  ADDJ_DB_USER: alldaydj
  ADDJ_DB_PASS: ${{ secrets.ADDJ_DB_PASS }}
  ADDJ_DB_HOST: localhost
  ADDJ_RABIT_HOST: localhost
  ADDJ_RABBIT_USER: alldaydj
  ADDJ_RABBIT_PASS: ${{ secrets.ADDJ_RABBIT_PASS }}
  PYTHON_VER: 3.9
  ADDJ_CELERY_ALWAYS_EAGER: "True"
  DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
  ADDJ_S3_REGION: dummy-region
  ADDJ_S3_ENDPOINT: https://localhost/
  ADDJ_S3_KEY_ID: key123
  ADDJ_S3_KEY_SECRET: secret123
  ADDJ_S3_BUCKET: alldaydj
  ADDJ_ELASTIC_SERVER: localhost

jobs:
  django-tests:
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.ADDJ_DB_NAME }}
          POSTGRES_PASSWORD: ${{ env.ADDJ_DB_PASS }}
          POSTGRES_USER: ${{ env.ADDJ_DB_USER }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: ${{ env.ADDJ_RABBIT_USER }}
          RABBITMQ_DEFAULT_PASS: ${{ env.ADDJ_RABBIT_PASS }}
        ports:
          - 5672:5672
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        env:
          discovery.type: single-node
        ports:
          - 9200:9200
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v1
      - name: Install Python ${{ env.PYTHON_VER }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VER }}
      - name: Install FFMPEG
        run: |
          sudo apt update
          sudo apt install ffmpeg
      - name: Install Python dependancies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run the black lint check
        working-directory: ./backend
        run: |
          black . --check
      - name: Setup the elasticearch index
        working-directory: ./backend
        run: python manage.py search_index --create -f
      - name: Test with django
        working-directory: ./backend
        run: python manage.py test
      - name: Test coverage to deepsource.io
        working-directory: ./backend
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key python --value-file ./coverage.xml
  backend-container:
    needs: django-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v1
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build the web app backend container (tagged)
        uses: docker/build-push-action@v2
        with:
          file: ./backend/web.Dockerfile
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: "True"
          tags: steelegbr/alldaydj-backend:${{ env.GITHUB_REF_SLUG }}
      - name: Build the web app backend container (latest)
        uses: docker/build-push-action@v2
        with:
          file: ./backend/web.Dockerfile
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: "True"
          tags: steelegbr/alldaydj-backend
  react-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v1
      - name: Install NPM
        uses: actions/setup-node@v2
      - name: Install yarn packages
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: --cwd ./frontend install
      - name: ECMA Script Linting
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: --cwd ./frontend lint-ci
      - name: Jest Unit Tests
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: --cwd ./frontend test
  frontend-container:
    needs: react-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v1
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build the frontend container (tagged)
        uses: docker/build-push-action@v2
        with:
          file: ./frontend/frontend.Dockerfile
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: "True"
          tags: steelegbr/alldaydj-frontend:${{ env.GITHUB_REF_SLUG }}
      - name: Build the frontend container (latest)
        uses: docker/build-push-action@v2
        with:
          file: ./frontend/frontend.Dockerfile
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          push: "True"
          tags: steelegbr/alldaydj-frontend
  integration-tests:
    needs: [backend-container, frontend-container]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.ADDJ_DB_NAME }}
          POSTGRES_PASSWORD: ${{ env.ADDJ_DB_PASS }}
          POSTGRES_USER: ${{ env.ADDJ_DB_USER }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: ${{ env.ADDJ_RABBIT_USER }}
          RABBITMQ_DEFAULT_PASS: ${{ env.ADDJ_RABBIT_PASS }}
        ports:
          - 5672:5672
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
        env:
          discovery.type: single-node
        ports:
          - 9200:9200
      frontend:
        image: steelegbr/alldaydj-frontend
        ports:
          - 80:3000
      backend:
        image: steelegbr/alldaydj-backend
        ports:
          - 8000:8000
    steps:
      - name: Checkout the commit
        uses: actions/checkout@v1
      - name: Cypress integration tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: frontend
        env:
          CYPRESS_USERNAME: ${{ secrets.CYPRESS_USERNAME }}
          CYPRESS_PASSWORD: ${{ secrets.CYPRESS_PASSWORD }}
