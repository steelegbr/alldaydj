// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`happy path loads and unloads 1`] = `
<PreviewPlayer>
  <ForwardRef(Drawer)
    anchor="bottom"
    open={true}
    variant="permanent"
  >
    <MuiDrawerDocked
      className="MuiDrawer-root MuiDrawer-docked"
      ownerState={
        Object {
          "anchor": "bottom",
          "children": <div
            className="makeStyles-player-1"
          >
            <ForwardRef(Grid)
              alignItems="center"
              container={true}
              justifyContent="space-between"
            >
              <ForwardRef(Grid)
                item={true}
              >
                <ForwardRef(ButtonGroup)
                  aria-label="preview cart"
                  variant="contained"
                >
                  <ForwardRef(Button)
                    disabled={false}
                    onClick={[Function]}
                    startIcon={<Memo />}
                  >
                    Pause
                  </ForwardRef(Button)>
                  <ForwardRef(Button)
                    disabled={false}
                    onClick={[Function]}
                    startIcon={<Memo />}
                  >
                    Stop
                  </ForwardRef(Button)>
                </ForwardRef(ButtonGroup)>
              </ForwardRef(Grid)>
              <ForwardRef(Grid)
                item={true}
              />
              <ForwardRef(Grid)
                item={true}
              >
                <ForwardRef(Button)
                  data-test="button-close"
                  onClick={[Function]}
                  startIcon={<Memo />}
                >
                  Close
                </ForwardRef(Button)>
              </ForwardRef(Grid)>
            </ForwardRef(Grid)>
            <React.Fragment>
              <ForwardRef(Typography)
                variant="subtitle1"
              >
                The Title
              </ForwardRef(Typography)>
              <ForwardRef(Typography)
                variant="subtitle2"
              >
                The Song
              </ForwardRef(Typography)>
              <ForwardRef(Grid)
                alignItems="center"
                container={true}
                justifyContent="space-between"
                spacing={2}
              >
                <ForwardRef(Grid)
                  item={true}
                  xs={1}
                >
                  0:00
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  item={true}
                  xs={10}
                >
                  <ForwardRef(Slider)
                    aria-label="audio preview time indicator"
                    data-test="slider-preview"
                    max={4}
                    min={0}
                    onChange={[Function]}
                    onKeyUp={[Function]}
                    onMouseUp={[Function]}
                    step={1}
                    value={0}
                  />
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  alignContent="flex-end"
                  item={true}
                  xs={1}
                >
                  0:00
                </ForwardRef(Grid)>
              </ForwardRef(Grid)>
            </React.Fragment>
          </div>,
          "elevation": 16,
          "open": true,
          "variant": "permanent",
        }
      }
    >
      <div
        className="MuiDrawer-root MuiDrawer-docked css-7ik032-MuiDrawer-docked"
      >
        <MuiDrawerPaper
          className="MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom"
          elevation={0}
          ownerState={
            Object {
              "anchor": "bottom",
              "children": <div
                className="makeStyles-player-1"
              >
                <ForwardRef(Grid)
                  alignItems="center"
                  container={true}
                  justifyContent="space-between"
                >
                  <ForwardRef(Grid)
                    item={true}
                  >
                    <ForwardRef(ButtonGroup)
                      aria-label="preview cart"
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        disabled={false}
                        onClick={[Function]}
                        startIcon={<Memo />}
                      >
                        Pause
                      </ForwardRef(Button)>
                      <ForwardRef(Button)
                        disabled={false}
                        onClick={[Function]}
                        startIcon={<Memo />}
                      >
                        Stop
                      </ForwardRef(Button)>
                    </ForwardRef(ButtonGroup)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                  />
                  <ForwardRef(Grid)
                    item={true}
                  >
                    <ForwardRef(Button)
                      data-test="button-close"
                      onClick={[Function]}
                      startIcon={<Memo />}
                    >
                      Close
                    </ForwardRef(Button)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
                <React.Fragment>
                  <ForwardRef(Typography)
                    variant="subtitle1"
                  >
                    The Title
                  </ForwardRef(Typography)>
                  <ForwardRef(Typography)
                    variant="subtitle2"
                  >
                    The Song
                  </ForwardRef(Typography)>
                  <ForwardRef(Grid)
                    alignItems="center"
                    container={true}
                    justifyContent="space-between"
                    spacing={2}
                  >
                    <ForwardRef(Grid)
                      item={true}
                      xs={1}
                    >
                      0:00
                    </ForwardRef(Grid)>
                    <ForwardRef(Grid)
                      item={true}
                      xs={10}
                    >
                      <ForwardRef(Slider)
                        aria-label="audio preview time indicator"
                        data-test="slider-preview"
                        max={4}
                        min={0}
                        onChange={[Function]}
                        onKeyUp={[Function]}
                        onMouseUp={[Function]}
                        step={1}
                        value={0}
                      />
                    </ForwardRef(Grid)>
                    <ForwardRef(Grid)
                      alignContent="flex-end"
                      item={true}
                      xs={1}
                    >
                      0:00
                    </ForwardRef(Grid)>
                  </ForwardRef(Grid)>
                </React.Fragment>
              </div>,
              "elevation": 16,
              "open": true,
              "variant": "permanent",
            }
          }
          square={true}
        >
          <ForwardRef(Paper)
            className="MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper"
            elevation={0}
            square={true}
          >
            <MuiPaperRoot
              as="div"
              className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper"
              ownerState={
                Object {
                  "children": <div
                    className="makeStyles-player-1"
                  >
                    <ForwardRef(Grid)
                      alignItems="center"
                      container={true}
                      justifyContent="space-between"
                    >
                      <ForwardRef(Grid)
                        item={true}
                      >
                        <ForwardRef(ButtonGroup)
                          aria-label="preview cart"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            disabled={false}
                            onClick={[Function]}
                            startIcon={<Memo />}
                          >
                            Pause
                          </ForwardRef(Button)>
                          <ForwardRef(Button)
                            disabled={false}
                            onClick={[Function]}
                            startIcon={<Memo />}
                          >
                            Stop
                          </ForwardRef(Button)>
                        </ForwardRef(ButtonGroup)>
                      </ForwardRef(Grid)>
                      <ForwardRef(Grid)
                        item={true}
                      />
                      <ForwardRef(Grid)
                        item={true}
                      >
                        <ForwardRef(Button)
                          data-test="button-close"
                          onClick={[Function]}
                          startIcon={<Memo />}
                        >
                          Close
                        </ForwardRef(Button)>
                      </ForwardRef(Grid)>
                    </ForwardRef(Grid)>
                    <React.Fragment>
                      <ForwardRef(Typography)
                        variant="subtitle1"
                      >
                        The Title
                      </ForwardRef(Typography)>
                      <ForwardRef(Typography)
                        variant="subtitle2"
                      >
                        The Song
                      </ForwardRef(Typography)>
                      <ForwardRef(Grid)
                        alignItems="center"
                        container={true}
                        justifyContent="space-between"
                        spacing={2}
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={1}
                        >
                          0:00
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={10}
                        >
                          <ForwardRef(Slider)
                            aria-label="audio preview time indicator"
                            data-test="slider-preview"
                            max={4}
                            min={0}
                            onChange={[Function]}
                            onKeyUp={[Function]}
                            onMouseUp={[Function]}
                            step={1}
                            value={0}
                          />
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          alignContent="flex-end"
                          item={true}
                          xs={1}
                        >
                          0:00
                        </ForwardRef(Grid)>
                      </ForwardRef(Grid)>
                    </React.Fragment>
                  </div>,
                  "className": "MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper",
                  "component": "div",
                  "elevation": 0,
                  "square": true,
                  "variant": "elevation",
                }
              }
            >
              <div
                className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1ic0da0-MuiPaper-root-MuiDrawer-paper"
              >
                <div
                  className="makeStyles-player-1"
                >
                  <ForwardRef(Grid)
                    alignItems="center"
                    container={true}
                    justifyContent="space-between"
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                            >
                              <ForwardRef(ButtonGroup)
                                aria-label="preview cart"
                                variant="contained"
                              >
                                <ForwardRef(Button)
                                  disabled={false}
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Pause
                                </ForwardRef(Button)>
                                <ForwardRef(Button)
                                  disabled={false}
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Stop
                                </ForwardRef(Button)>
                              </ForwardRef(ButtonGroup)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                            />,
                            <ForwardRef(Grid)
                              item={true}
                            >
                              <ForwardRef(Button)
                                data-test="button-close"
                                onClick={[Function]}
                                startIcon={<Memo />}
                              >
                                Close
                              </ForwardRef(Button)>
                            </ForwardRef(Grid)>,
                          ],
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": false,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "center",
                            "justifyContent": "space-between",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": false,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined css-1oukqxz-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "children": <ForwardRef(ButtonGroup)
                                  aria-label="preview cart"
                                  variant="contained"
                                >
                                  <ForwardRef(Button)
                                    disabled={false}
                                    onClick={[Function]}
                                    startIcon={<Memo />}
                                  >
                                    Pause
                                  </ForwardRef(Button)>
                                  <ForwardRef(Button)
                                    disabled={false}
                                    onClick={[Function]}
                                    startIcon={<Memo />}
                                  >
                                    Stop
                                  </ForwardRef(Button)>
                                </ForwardRef(ButtonGroup)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            >
                              <ForwardRef(ButtonGroup)
                                aria-label="preview cart"
                                variant="contained"
                              >
                                <MuiButtonGroupRoot
                                  aria-label="preview cart"
                                  as="div"
                                  className="MuiButtonGroup-root MuiButtonGroup-contained"
                                  ownerState={
                                    Object {
                                      "aria-label": "preview cart",
                                      "children": Array [
                                        <ForwardRef(Button)
                                          disabled={false}
                                          onClick={[Function]}
                                          startIcon={<Memo />}
                                        >
                                          Pause
                                        </ForwardRef(Button)>,
                                        <ForwardRef(Button)
                                          disabled={false}
                                          onClick={[Function]}
                                          startIcon={<Memo />}
                                        >
                                          Stop
                                        </ForwardRef(Button)>,
                                      ],
                                      "color": "primary",
                                      "component": "div",
                                      "disableElevation": false,
                                      "disableFocusRipple": false,
                                      "disableRipple": false,
                                      "disabled": false,
                                      "fullWidth": false,
                                      "orientation": "horizontal",
                                      "size": "medium",
                                      "variant": "contained",
                                    }
                                  }
                                  role="group"
                                >
                                  <div
                                    aria-label="preview cart"
                                    className="MuiButtonGroup-root MuiButtonGroup-contained css-dr3dyz-MuiButtonGroup-root"
                                    role="group"
                                  >
                                    <ForwardRef(Button)
                                      className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                      color="primary"
                                      disableElevation={false}
                                      disableFocusRipple={false}
                                      disableRipple={false}
                                      disabled={false}
                                      fullWidth={false}
                                      key=".0"
                                      onClick={[Function]}
                                      size="medium"
                                      startIcon={<Memo />}
                                      variant="contained"
                                    >
                                      <MuiButtonRoot
                                        className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "Pause",
                                            "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disableRipple": false,
                                            "disabled": false,
                                            "fullWidth": false,
                                            "onClick": [Function],
                                            "size": "medium",
                                            "startIcon": <Memo />,
                                            "type": undefined,
                                            "variant": "contained",
                                          }
                                        }
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disableRipple={false}
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  <MuiButtonStartIcon
                                                    className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                    ownerState={
                                                      Object {
                                                        "children": "Pause",
                                                        "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                        "color": "primary",
                                                        "component": "button",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disableRipple": false,
                                                        "disabled": false,
                                                        "fullWidth": false,
                                                        "onClick": [Function],
                                                        "size": "medium",
                                                        "startIcon": <Memo />,
                                                        "type": undefined,
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Memo />
                                                  </MuiButtonStartIcon>,
                                                  "Pause",
                                                  undefined,
                                                ],
                                                "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": false,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <MuiButtonStartIcon
                                                className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                ownerState={
                                                  Object {
                                                    "children": "Pause",
                                                    "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                    "color": "primary",
                                                    "component": "button",
                                                    "disableElevation": false,
                                                    "disableFocusRipple": false,
                                                    "disableRipple": false,
                                                    "disabled": false,
                                                    "fullWidth": false,
                                                    "onClick": [Function],
                                                    "size": "medium",
                                                    "startIcon": <Memo />,
                                                    "type": undefined,
                                                    "variant": "contained",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                                >
                                                  <ForwardRef(PauseIcon)>
                                                    <ForwardRef(SvgIcon)
                                                      data-testid="PauseIcon"
                                                    >
                                                      <MuiSvgIconRoot
                                                        aria-hidden={true}
                                                        as="svg"
                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                        data-testid="PauseIcon"
                                                        focusable="false"
                                                        ownerState={
                                                          Object {
                                                            "children": <path
                                                              d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"
                                                            />,
                                                            "color": "inherit",
                                                            "component": "svg",
                                                            "data-testid": "PauseIcon",
                                                            "fontSize": "medium",
                                                            "viewBox": "0 0 24 24",
                                                          }
                                                        }
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                          data-testid="PauseIcon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"
                                                          />
                                                        </svg>
                                                      </MuiSvgIconRoot>
                                                    </ForwardRef(SvgIcon)>
                                                  </ForwardRef(PauseIcon)>
                                                </span>
                                              </MuiButtonStartIcon>
                                              Pause
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                              >
                                                <MuiTouchRippleRoot
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </MuiTouchRippleRoot>
                                              </ForwardRef(TouchRipple)>
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                    <ForwardRef(Button)
                                      className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                      color="primary"
                                      disableElevation={false}
                                      disableFocusRipple={false}
                                      disableRipple={false}
                                      disabled={false}
                                      fullWidth={false}
                                      key=".1"
                                      onClick={[Function]}
                                      size="medium"
                                      startIcon={<Memo />}
                                      variant="contained"
                                    >
                                      <MuiButtonRoot
                                        className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "Stop",
                                            "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disableRipple": false,
                                            "disabled": false,
                                            "fullWidth": false,
                                            "onClick": [Function],
                                            "size": "medium",
                                            "startIcon": <Memo />,
                                            "type": undefined,
                                            "variant": "contained",
                                          }
                                        }
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disableRipple={false}
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  <MuiButtonStartIcon
                                                    className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                    ownerState={
                                                      Object {
                                                        "children": "Stop",
                                                        "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                        "color": "primary",
                                                        "component": "button",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disableRipple": false,
                                                        "disabled": false,
                                                        "fullWidth": false,
                                                        "onClick": [Function],
                                                        "size": "medium",
                                                        "startIcon": <Memo />,
                                                        "type": undefined,
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Memo />
                                                  </MuiButtonStartIcon>,
                                                  "Stop",
                                                  undefined,
                                                ],
                                                "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": false,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <button
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root"
                                              disabled={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <MuiButtonStartIcon
                                                className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                ownerState={
                                                  Object {
                                                    "children": "Stop",
                                                    "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                    "color": "primary",
                                                    "component": "button",
                                                    "disableElevation": false,
                                                    "disableFocusRipple": false,
                                                    "disableRipple": false,
                                                    "disabled": false,
                                                    "fullWidth": false,
                                                    "onClick": [Function],
                                                    "size": "medium",
                                                    "startIcon": <Memo />,
                                                    "type": undefined,
                                                    "variant": "contained",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                                >
                                                  <ForwardRef(StopIcon)>
                                                    <ForwardRef(SvgIcon)
                                                      data-testid="StopIcon"
                                                    >
                                                      <MuiSvgIconRoot
                                                        aria-hidden={true}
                                                        as="svg"
                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                        data-testid="StopIcon"
                                                        focusable="false"
                                                        ownerState={
                                                          Object {
                                                            "children": <path
                                                              d="M6 6h12v12H6z"
                                                            />,
                                                            "color": "inherit",
                                                            "component": "svg",
                                                            "data-testid": "StopIcon",
                                                            "fontSize": "medium",
                                                            "viewBox": "0 0 24 24",
                                                          }
                                                        }
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                          data-testid="StopIcon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 6h12v12H6z"
                                                          />
                                                        </svg>
                                                      </MuiSvgIconRoot>
                                                    </ForwardRef(SvgIcon)>
                                                  </ForwardRef(StopIcon)>
                                                </span>
                                              </MuiButtonStartIcon>
                                              Stop
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                              >
                                                <MuiTouchRippleRoot
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </MuiTouchRippleRoot>
                                              </ForwardRef(TouchRipple)>
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                  </div>
                                </MuiButtonGroupRoot>
                              </ForwardRef(ButtonGroup)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            />
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Button)
                                  data-test="button-close"
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Close
                                </ForwardRef(Button)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            >
                              <ForwardRef(Button)
                                data-test="button-close"
                                onClick={[Function]}
                                startIcon={<Memo />}
                              >
                                <MuiButtonRoot
                                  classes={
                                    Object {
                                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                      "label": "MuiButton-label",
                                      "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                    }
                                  }
                                  component="button"
                                  data-test="button-close"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName=""
                                  onClick={[Function]}
                                  ownerState={
                                    Object {
                                      "children": "Close",
                                      "color": "primary",
                                      "component": "button",
                                      "data-test": "button-close",
                                      "disableElevation": false,
                                      "disableFocusRipple": false,
                                      "disabled": false,
                                      "fullWidth": false,
                                      "onClick": [Function],
                                      "size": "medium",
                                      "startIcon": <Memo />,
                                      "type": undefined,
                                      "variant": "text",
                                    }
                                  }
                                >
                                  <ForwardRef(ButtonBase)
                                    className="css-w60cv3-MuiButton-root"
                                    classes={
                                      Object {
                                        "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                        "label": "MuiButton-label",
                                        "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                        "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                      }
                                    }
                                    component="button"
                                    data-test="button-close"
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName=""
                                    onClick={[Function]}
                                  >
                                    <MuiButtonBaseRoot
                                      as="button"
                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-w60cv3-MuiButton-root"
                                      classes={
                                        Object {
                                          "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                          "label": "MuiButton-label",
                                          "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                          "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                        }
                                      }
                                      data-test="button-close"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      ownerState={
                                        Object {
                                          "centerRipple": false,
                                          "children": Array [
                                            <MuiButtonStartIcon
                                              className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                              ownerState={
                                                Object {
                                                  "children": "Close",
                                                  "color": "primary",
                                                  "component": "button",
                                                  "data-test": "button-close",
                                                  "disableElevation": false,
                                                  "disableFocusRipple": false,
                                                  "disabled": false,
                                                  "fullWidth": false,
                                                  "onClick": [Function],
                                                  "size": "medium",
                                                  "startIcon": <Memo />,
                                                  "type": undefined,
                                                  "variant": "text",
                                                }
                                              }
                                            >
                                              <Memo />
                                            </MuiButtonStartIcon>,
                                            "Close",
                                            undefined,
                                          ],
                                          "className": "css-w60cv3-MuiButton-root",
                                          "classes": Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          },
                                          "component": "button",
                                          "data-test": "button-close",
                                          "disableRipple": false,
                                          "disableTouchRipple": false,
                                          "disabled": false,
                                          "focusRipple": true,
                                          "focusVisible": false,
                                          "focusVisibleClassName": "",
                                          "onClick": [Function],
                                          "tabIndex": 0,
                                          "type": undefined,
                                        }
                                      }
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <button
                                        className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-1e6y48t-MuiButtonBase-root-MuiButton-root"
                                        data-test="button-close"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onContextMenu={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <MuiButtonStartIcon
                                          className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                          ownerState={
                                            Object {
                                              "children": "Close",
                                              "color": "primary",
                                              "component": "button",
                                              "data-test": "button-close",
                                              "disableElevation": false,
                                              "disableFocusRipple": false,
                                              "disabled": false,
                                              "fullWidth": false,
                                              "onClick": [Function],
                                              "size": "medium",
                                              "startIcon": <Memo />,
                                              "type": undefined,
                                              "variant": "text",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                          >
                                            <ForwardRef(CloseIcon)>
                                              <ForwardRef(SvgIcon)
                                                data-testid="CloseIcon"
                                              >
                                                <MuiSvgIconRoot
                                                  aria-hidden={true}
                                                  as="svg"
                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                  data-testid="CloseIcon"
                                                  focusable="false"
                                                  ownerState={
                                                    Object {
                                                      "children": <path
                                                        d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                      />,
                                                      "color": "inherit",
                                                      "component": "svg",
                                                      "data-testid": "CloseIcon",
                                                      "fontSize": "medium",
                                                      "viewBox": "0 0 24 24",
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                    data-testid="CloseIcon"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </MuiSvgIconRoot>
                                              </ForwardRef(SvgIcon)>
                                            </ForwardRef(CloseIcon)>
                                          </span>
                                        </MuiButtonStartIcon>
                                        Close
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                        >
                                          <MuiTouchRippleRoot
                                            className="MuiTouchRipple-root"
                                          >
                                            <span
                                              className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </MuiTouchRippleRoot>
                                        </ForwardRef(TouchRipple)>
                                      </button>
                                    </MuiButtonBaseRoot>
                                  </ForwardRef(ButtonBase)>
                                </MuiButtonRoot>
                              </ForwardRef(Button)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Typography)
                    variant="subtitle1"
                  >
                    <MuiTypographyRoot
                      as="h6"
                      className="MuiTypography-root MuiTypography-subtitle1"
                      ownerState={
                        Object {
                          "align": "inherit",
                          "children": "The Title",
                          "className": undefined,
                          "color": undefined,
                          "component": undefined,
                          "gutterBottom": false,
                          "noWrap": false,
                          "paragraph": false,
                          "sx": Object {
                            "color": undefined,
                          },
                          "variant": "subtitle1",
                          "variantMapping": Object {
                            "body1": "p",
                            "body2": "p",
                            "h1": "h1",
                            "h2": "h2",
                            "h3": "h3",
                            "h4": "h4",
                            "h5": "h5",
                            "h6": "h6",
                            "inherit": "p",
                            "subtitle1": "h6",
                            "subtitle2": "h6",
                          },
                        }
                      }
                      sx={
                        Object {
                          "color": undefined,
                        }
                      }
                    >
                      <h6
                        className="MuiTypography-root MuiTypography-subtitle1 css-10wpov9-MuiTypography-root"
                      >
                        The Title
                      </h6>
                    </MuiTypographyRoot>
                  </ForwardRef(Typography)>
                  <ForwardRef(Typography)
                    variant="subtitle2"
                  >
                    <MuiTypographyRoot
                      as="h6"
                      className="MuiTypography-root MuiTypography-subtitle2"
                      ownerState={
                        Object {
                          "align": "inherit",
                          "children": "The Song",
                          "className": undefined,
                          "color": undefined,
                          "component": undefined,
                          "gutterBottom": false,
                          "noWrap": false,
                          "paragraph": false,
                          "sx": Object {
                            "color": undefined,
                          },
                          "variant": "subtitle2",
                          "variantMapping": Object {
                            "body1": "p",
                            "body2": "p",
                            "h1": "h1",
                            "h2": "h2",
                            "h3": "h3",
                            "h4": "h4",
                            "h5": "h5",
                            "h6": "h6",
                            "inherit": "p",
                            "subtitle1": "h6",
                            "subtitle2": "h6",
                          },
                        }
                      }
                      sx={
                        Object {
                          "color": undefined,
                        }
                      }
                    >
                      <h6
                        className="MuiTypography-root MuiTypography-subtitle2 css-ati914-MuiTypography-root"
                      >
                        The Song
                      </h6>
                    </MuiTypographyRoot>
                  </ForwardRef(Typography)>
                  <ForwardRef(Grid)
                    alignItems="center"
                    container={true}
                    justifyContent="space-between"
                    spacing={2}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                              xs={1}
                            >
                              0:00
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                              xs={10}
                            >
                              <ForwardRef(Slider)
                                aria-label="audio preview time indicator"
                                data-test="slider-preview"
                                max={4}
                                min={0}
                                onChange={[Function]}
                                onKeyUp={[Function]}
                                onMouseUp={[Function]}
                                step={1}
                                value={0}
                              />
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              alignContent="flex-end"
                              item={true}
                              xs={1}
                            >
                              0:00
                            </ForwardRef(Grid)>,
                          ],
                          "columnSpacing": 2,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": false,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 2,
                          "sm": false,
                          "spacing": 2,
                          "sx": Object {
                            "alignItems": "center",
                            "justifyContent": "space-between",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": false,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-2 css-6ejd34-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={1}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
                            ownerState={
                              Object {
                                "children": "0:00",
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 1,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1 css-1fdpgu7-MuiGrid-root"
                            >
                              0:00
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={10}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Slider)
                                  aria-label="audio preview time indicator"
                                  data-test="slider-preview"
                                  max={4}
                                  min={0}
                                  onChange={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseUp={[Function]}
                                  step={1}
                                  value={0}
                                />,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 10,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-10 css-1uzrzkv-MuiGrid-root"
                            >
                              <ForwardRef(Slider)
                                aria-label="audio preview time indicator"
                                data-test="slider-preview"
                                max={4}
                                min={0}
                                onChange={[Function]}
                                onKeyUp={[Function]}
                                onMouseUp={[Function]}
                                step={1}
                                value={0}
                              >
                                <ForwardRef(SliderUnstyled)
                                  aria-label="audio preview time indicator"
                                  classes={
                                    Object {
                                      "root": "MuiSlider-colorPrimary MuiSlider-sizeMedium",
                                      "thumb": "MuiSlider-thumbColorPrimary MuiSlider-thumbSizeMedium",
                                    }
                                  }
                                  components={
                                    Object {
                                      "Mark": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "span",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiSlider-mark;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "MarkLabel": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "span",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiSlider-markLabel;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Rail": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "span",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiSlider-rail;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Root": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "span",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiSlider-root;",
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "propTypes": Object {
                                          "children": [Function],
                                          "ownerState": [Function],
                                        },
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Thumb": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "span",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiSlider-thumb;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "Track": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": "span",
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiSlider-track;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                      "ValueLabel": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "__emotion_base": [Function],
                                        "__emotion_forwardProp": [Function],
                                        "__emotion_real": [Circular],
                                        "__emotion_styles": Array [
                                          "label:MuiSlider-valueLabel;",
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                        "defaultProps": undefined,
                                        "render": [Function],
                                        "withComponent": [Function],
                                      },
                                    }
                                  }
                                  componentsProps={
                                    Object {
                                      "root": Object {
                                        "ownerState": Object {
                                          "color": "primary",
                                          "size": "medium",
                                        },
                                      },
                                      "thumb": Object {
                                        "ownerState": Object {
                                          "color": "primary",
                                          "size": "medium",
                                        },
                                      },
                                      "track": Object {
                                        "ownerState": Object {
                                          "color": "primary",
                                          "size": "medium",
                                        },
                                      },
                                      "valueLabel": Object {
                                        "ownerState": Object {
                                          "color": "primary",
                                          "size": "medium",
                                        },
                                      },
                                    }
                                  }
                                  data-test="slider-preview"
                                  isRtl={false}
                                  max={4}
                                  min={0}
                                  onChange={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseUp={[Function]}
                                  step={1}
                                  value={0}
                                >
                                  <MuiSliderRoot
                                    as="span"
                                    className="MuiSlider-colorPrimary MuiSlider-sizeMedium MuiSlider-root"
                                    data-test="slider-preview"
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseUp={[Function]}
                                    ownerState={
                                      Object {
                                        "aria-label": "audio preview time indicator",
                                        "classes": Object {
                                          "root": "MuiSlider-colorPrimary MuiSlider-sizeMedium",
                                          "thumb": "MuiSlider-thumbColorPrimary MuiSlider-thumbSizeMedium",
                                        },
                                        "color": "primary",
                                        "components": Object {
                                          "Mark": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "span",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiSlider-mark;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "MarkLabel": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "span",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiSlider-markLabel;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Rail": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "span",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiSlider-rail;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Root": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "span",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiSlider-root;",
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "propTypes": Object {
                                              "children": [Function],
                                              "ownerState": [Function],
                                            },
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Thumb": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "span",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiSlider-thumb;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "Track": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": "span",
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiSlider-track;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                          "ValueLabel": Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "__emotion_base": [Function],
                                            "__emotion_forwardProp": [Function],
                                            "__emotion_real": [Circular],
                                            "__emotion_styles": Array [
                                              "label:MuiSlider-valueLabel;",
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                            "defaultProps": undefined,
                                            "render": [Function],
                                            "withComponent": [Function],
                                          },
                                        },
                                        "componentsProps": Object {
                                          "root": Object {
                                            "ownerState": Object {
                                              "color": "primary",
                                              "size": "medium",
                                            },
                                          },
                                          "thumb": Object {
                                            "ownerState": Object {
                                              "color": "primary",
                                              "size": "medium",
                                            },
                                          },
                                          "track": Object {
                                            "ownerState": Object {
                                              "color": "primary",
                                              "size": "medium",
                                            },
                                          },
                                          "valueLabel": Object {
                                            "ownerState": Object {
                                              "color": "primary",
                                              "size": "medium",
                                            },
                                          },
                                        },
                                        "data-test": "slider-preview",
                                        "disabled": false,
                                        "dragging": false,
                                        "isRtl": false,
                                        "marked": false,
                                        "max": 4,
                                        "min": 0,
                                        "onChange": [Function],
                                        "onKeyUp": [Function],
                                        "onMouseUp": [Function],
                                        "orientation": "horizontal",
                                        "scale": [Function],
                                        "size": "medium",
                                        "step": 1,
                                        "track": "normal",
                                        "value": 0,
                                        "valueLabelDisplay": "off",
                                        "valueLabelFormat": [Function],
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiSlider-colorPrimary MuiSlider-sizeMedium MuiSlider-root css-187mznn-MuiSlider-root"
                                      data-test="slider-preview"
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <MuiSliderRail
                                        className="MuiSlider-rail"
                                        ownerState={
                                          Object {
                                            "aria-label": "audio preview time indicator",
                                            "classes": Object {
                                              "root": "MuiSlider-colorPrimary MuiSlider-sizeMedium",
                                              "thumb": "MuiSlider-thumbColorPrimary MuiSlider-thumbSizeMedium",
                                            },
                                            "components": Object {
                                              "Mark": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-mark;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "MarkLabel": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-markLabel;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Rail": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-rail;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "propTypes": Object {
                                                  "children": [Function],
                                                  "ownerState": [Function],
                                                },
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Thumb": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-thumb;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Track": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-track;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "ValueLabel": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": [Function],
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-valueLabel;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "componentsProps": Object {
                                              "root": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "thumb": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "track": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "valueLabel": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                            },
                                            "data-test": "slider-preview",
                                            "disabled": false,
                                            "dragging": false,
                                            "isRtl": false,
                                            "marked": false,
                                            "max": 4,
                                            "min": 0,
                                            "onChange": [Function],
                                            "onKeyUp": [Function],
                                            "onMouseUp": [Function],
                                            "orientation": "horizontal",
                                            "scale": [Function],
                                            "step": 1,
                                            "track": "normal",
                                            "value": 0,
                                            "valueLabelDisplay": "off",
                                            "valueLabelFormat": [Function],
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiSlider-rail css-14pt78w-MuiSlider-rail"
                                        />
                                      </MuiSliderRail>
                                      <MuiSliderTrack
                                        className="MuiSlider-track"
                                        ownerState={
                                          Object {
                                            "aria-label": "audio preview time indicator",
                                            "classes": Object {
                                              "root": "MuiSlider-colorPrimary MuiSlider-sizeMedium",
                                              "thumb": "MuiSlider-thumbColorPrimary MuiSlider-thumbSizeMedium",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Mark": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-mark;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "MarkLabel": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-markLabel;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Rail": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-rail;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "propTypes": Object {
                                                  "children": [Function],
                                                  "ownerState": [Function],
                                                },
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Thumb": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-thumb;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Track": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-track;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "ValueLabel": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": [Function],
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-valueLabel;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "componentsProps": Object {
                                              "root": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "thumb": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "track": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "valueLabel": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                            },
                                            "data-test": "slider-preview",
                                            "disabled": false,
                                            "dragging": false,
                                            "isRtl": false,
                                            "marked": false,
                                            "max": 4,
                                            "min": 0,
                                            "onChange": [Function],
                                            "onKeyUp": [Function],
                                            "onMouseUp": [Function],
                                            "orientation": "horizontal",
                                            "scale": [Function],
                                            "size": "medium",
                                            "step": 1,
                                            "track": "normal",
                                            "value": 0,
                                            "valueLabelDisplay": "off",
                                            "valueLabelFormat": [Function],
                                          }
                                        }
                                        style={
                                          Object {
                                            "left": "0%",
                                            "width": "0%",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiSlider-track css-1gv0vcd-MuiSlider-track"
                                          style={
                                            Object {
                                              "left": "0%",
                                              "width": "0%",
                                            }
                                          }
                                        />
                                      </MuiSliderTrack>
                                      <Forward
                                        className="MuiSlider-valueLabel"
                                        disabled={false}
                                        index={0}
                                        open={false}
                                        ownerState={
                                          Object {
                                            "aria-label": "audio preview time indicator",
                                            "classes": Object {
                                              "root": "MuiSlider-colorPrimary MuiSlider-sizeMedium",
                                              "thumb": "MuiSlider-thumbColorPrimary MuiSlider-thumbSizeMedium",
                                            },
                                            "color": "primary",
                                            "components": Object {
                                              "Mark": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-mark;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "MarkLabel": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-markLabel;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Rail": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-rail;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Root": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-root;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "propTypes": Object {
                                                  "children": [Function],
                                                  "ownerState": [Function],
                                                },
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Thumb": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-thumb;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "Track": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": "span",
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-track;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                              "ValueLabel": Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "__emotion_base": [Function],
                                                "__emotion_forwardProp": [Function],
                                                "__emotion_real": [Circular],
                                                "__emotion_styles": Array [
                                                  "label:MuiSlider-valueLabel;",
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "defaultProps": undefined,
                                                "render": [Function],
                                                "withComponent": [Function],
                                              },
                                            },
                                            "componentsProps": Object {
                                              "root": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "thumb": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "track": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                              "valueLabel": Object {
                                                "ownerState": Object {
                                                  "color": "primary",
                                                  "size": "medium",
                                                },
                                              },
                                            },
                                            "data-test": "slider-preview",
                                            "disabled": false,
                                            "dragging": false,
                                            "isRtl": false,
                                            "marked": false,
                                            "max": 4,
                                            "min": 0,
                                            "onChange": [Function],
                                            "onKeyUp": [Function],
                                            "onMouseUp": [Function],
                                            "orientation": "horizontal",
                                            "scale": [Function],
                                            "size": "medium",
                                            "step": 1,
                                            "track": "normal",
                                            "value": 0,
                                            "valueLabelDisplay": "off",
                                            "valueLabelFormat": [Function],
                                          }
                                        }
                                        value={0}
                                        valueLabelDisplay="off"
                                        valueLabelFormat={[Function]}
                                      >
                                        <MuiSliderThumb
                                          className="MuiSlider-thumbColorPrimary MuiSlider-thumbSizeMedium MuiSlider-thumb"
                                          data-index={0}
                                          onMouseLeave={[Function]}
                                          onMouseOver={[Function]}
                                          ownerState={
                                            Object {
                                              "aria-label": "audio preview time indicator",
                                              "classes": Object {
                                                "root": "MuiSlider-colorPrimary MuiSlider-sizeMedium",
                                                "thumb": "MuiSlider-thumbColorPrimary MuiSlider-thumbSizeMedium",
                                              },
                                              "color": "primary",
                                              "components": Object {
                                                "Mark": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": "span",
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiSlider-mark;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                                "MarkLabel": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": "span",
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiSlider-markLabel;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                                "Rail": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": "span",
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiSlider-rail;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                                "Root": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": "span",
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiSlider-root;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "propTypes": Object {
                                                    "children": [Function],
                                                    "ownerState": [Function],
                                                  },
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                                "Thumb": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": "span",
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiSlider-thumb;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                                "Track": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": "span",
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiSlider-track;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                                "ValueLabel": Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "__emotion_base": [Function],
                                                  "__emotion_forwardProp": [Function],
                                                  "__emotion_real": [Circular],
                                                  "__emotion_styles": Array [
                                                    "label:MuiSlider-valueLabel;",
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                  "defaultProps": undefined,
                                                  "render": [Function],
                                                  "withComponent": [Function],
                                                },
                                              },
                                              "componentsProps": Object {
                                                "root": Object {
                                                  "ownerState": Object {
                                                    "color": "primary",
                                                    "size": "medium",
                                                  },
                                                },
                                                "thumb": Object {
                                                  "ownerState": Object {
                                                    "color": "primary",
                                                    "size": "medium",
                                                  },
                                                },
                                                "track": Object {
                                                  "ownerState": Object {
                                                    "color": "primary",
                                                    "size": "medium",
                                                  },
                                                },
                                                "valueLabel": Object {
                                                  "ownerState": Object {
                                                    "color": "primary",
                                                    "size": "medium",
                                                  },
                                                },
                                              },
                                              "data-test": "slider-preview",
                                              "disabled": false,
                                              "dragging": false,
                                              "isRtl": false,
                                              "marked": false,
                                              "max": 4,
                                              "min": 0,
                                              "onChange": [Function],
                                              "onKeyUp": [Function],
                                              "onMouseUp": [Function],
                                              "orientation": "horizontal",
                                              "scale": [Function],
                                              "size": "medium",
                                              "step": 1,
                                              "track": "normal",
                                              "value": 0,
                                              "valueLabelDisplay": "off",
                                              "valueLabelFormat": [Function],
                                            }
                                          }
                                          style={
                                            Object {
                                              "left": "0%",
                                              "pointerEvents": undefined,
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiSlider-thumbColorPrimary MuiSlider-thumbSizeMedium MuiSlider-thumb css-eg0mwd-MuiSlider-thumb"
                                            data-index={0}
                                            onMouseLeave={[Function]}
                                            onMouseOver={[Function]}
                                            style={
                                              Object {
                                                "left": "0%",
                                                "pointerEvents": undefined,
                                              }
                                            }
                                          >
                                            <input
                                              aria-label="audio preview time indicator"
                                              aria-orientation="horizontal"
                                              aria-valuemax={4}
                                              aria-valuemin={0}
                                              aria-valuenow={0}
                                              data-index={0}
                                              disabled={false}
                                              max={4}
                                              min={0}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              step={1}
                                              style={
                                                Object {
                                                  "border": 0,
                                                  "clip": "rect(0 0 0 0)",
                                                  "direction": "ltr",
                                                  "height": "100%",
                                                  "margin": -1,
                                                  "overflow": "hidden",
                                                  "padding": 0,
                                                  "position": "absolute",
                                                  "whiteSpace": "nowrap",
                                                  "width": "100%",
                                                }
                                              }
                                              type="range"
                                              value={0}
                                            />
                                          </span>
                                        </MuiSliderThumb>
                                      </Forward>
                                    </span>
                                  </MuiSliderRoot>
                                </ForwardRef(SliderUnstyled)>
                              </ForwardRef(Slider)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          alignContent="flex-end"
                          item={true}
                          xs={1}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
                            ownerState={
                              Object {
                                "children": "0:00",
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "alignContent": "flex-end",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 1,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "alignContent": "flex-end",
                              }
                            }
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1 css-145uzus-MuiGrid-root"
                            >
                              0:00
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                </div>
              </div>
            </MuiPaperRoot>
          </ForwardRef(Paper)>
        </MuiDrawerPaper>
      </div>
    </MuiDrawerDocked>
  </ForwardRef(Drawer)>
</PreviewPlayer>
`;

exports[`unhappy path fails on first http request 1`] = `
<PreviewPlayer>
  <ForwardRef(Drawer)
    anchor="bottom"
    open={true}
    variant="permanent"
  >
    <MuiDrawerDocked
      className="MuiDrawer-root MuiDrawer-docked"
      ownerState={
        Object {
          "anchor": "bottom",
          "children": <div
            className="makeStyles-player-1"
          >
            <ForwardRef(Grid)
              alignItems="center"
              container={true}
              justifyContent="space-between"
            >
              <ForwardRef(Grid)
                item={true}
              >
                <ForwardRef(ButtonGroup)
                  aria-label="preview cart"
                  variant="contained"
                >
                  <ForwardRef(Button)
                    disabled={true}
                    onClick={[Function]}
                    startIcon={<Memo />}
                  >
                    Play
                  </ForwardRef(Button)>
                  <ForwardRef(Button)
                    disabled={true}
                    onClick={[Function]}
                    startIcon={<Memo />}
                  >
                    Stop
                  </ForwardRef(Button)>
                </ForwardRef(ButtonGroup)>
              </ForwardRef(Grid)>
              <ForwardRef(Grid)
                item={true}
              />
              <ForwardRef(Grid)
                item={true}
              >
                <ForwardRef(Button)
                  data-test="button-close"
                  onClick={[Function]}
                  startIcon={<Memo />}
                >
                  Close
                </ForwardRef(Button)>
              </ForwardRef(Grid)>
            </ForwardRef(Grid)>
            <ForwardRef(Alert)
              data-test="preview-error"
              severity="error"
              variant="outlined"
            >
              Something went wrong trying to preview cart audio. Please try again later.
            </ForwardRef(Alert)>
          </div>,
          "elevation": 16,
          "open": true,
          "variant": "permanent",
        }
      }
    >
      <div
        className="MuiDrawer-root MuiDrawer-docked css-7ik032-MuiDrawer-docked"
      >
        <MuiDrawerPaper
          className="MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom"
          elevation={0}
          ownerState={
            Object {
              "anchor": "bottom",
              "children": <div
                className="makeStyles-player-1"
              >
                <ForwardRef(Grid)
                  alignItems="center"
                  container={true}
                  justifyContent="space-between"
                >
                  <ForwardRef(Grid)
                    item={true}
                  >
                    <ForwardRef(ButtonGroup)
                      aria-label="preview cart"
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        disabled={true}
                        onClick={[Function]}
                        startIcon={<Memo />}
                      >
                        Play
                      </ForwardRef(Button)>
                      <ForwardRef(Button)
                        disabled={true}
                        onClick={[Function]}
                        startIcon={<Memo />}
                      >
                        Stop
                      </ForwardRef(Button)>
                    </ForwardRef(ButtonGroup)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                  />
                  <ForwardRef(Grid)
                    item={true}
                  >
                    <ForwardRef(Button)
                      data-test="button-close"
                      onClick={[Function]}
                      startIcon={<Memo />}
                    >
                      Close
                    </ForwardRef(Button)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
                <ForwardRef(Alert)
                  data-test="preview-error"
                  severity="error"
                  variant="outlined"
                >
                  Something went wrong trying to preview cart audio. Please try again later.
                </ForwardRef(Alert)>
              </div>,
              "elevation": 16,
              "open": true,
              "variant": "permanent",
            }
          }
          square={true}
        >
          <ForwardRef(Paper)
            className="MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper"
            elevation={0}
            square={true}
          >
            <MuiPaperRoot
              as="div"
              className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper"
              ownerState={
                Object {
                  "children": <div
                    className="makeStyles-player-1"
                  >
                    <ForwardRef(Grid)
                      alignItems="center"
                      container={true}
                      justifyContent="space-between"
                    >
                      <ForwardRef(Grid)
                        item={true}
                      >
                        <ForwardRef(ButtonGroup)
                          aria-label="preview cart"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            disabled={true}
                            onClick={[Function]}
                            startIcon={<Memo />}
                          >
                            Play
                          </ForwardRef(Button)>
                          <ForwardRef(Button)
                            disabled={true}
                            onClick={[Function]}
                            startIcon={<Memo />}
                          >
                            Stop
                          </ForwardRef(Button)>
                        </ForwardRef(ButtonGroup)>
                      </ForwardRef(Grid)>
                      <ForwardRef(Grid)
                        item={true}
                      />
                      <ForwardRef(Grid)
                        item={true}
                      >
                        <ForwardRef(Button)
                          data-test="button-close"
                          onClick={[Function]}
                          startIcon={<Memo />}
                        >
                          Close
                        </ForwardRef(Button)>
                      </ForwardRef(Grid)>
                    </ForwardRef(Grid)>
                    <ForwardRef(Alert)
                      data-test="preview-error"
                      severity="error"
                      variant="outlined"
                    >
                      Something went wrong trying to preview cart audio. Please try again later.
                    </ForwardRef(Alert)>
                  </div>,
                  "className": "MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper",
                  "component": "div",
                  "elevation": 0,
                  "square": true,
                  "variant": "elevation",
                }
              }
            >
              <div
                className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1ic0da0-MuiPaper-root-MuiDrawer-paper"
              >
                <div
                  className="makeStyles-player-1"
                >
                  <ForwardRef(Grid)
                    alignItems="center"
                    container={true}
                    justifyContent="space-between"
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                            >
                              <ForwardRef(ButtonGroup)
                                aria-label="preview cart"
                                variant="contained"
                              >
                                <ForwardRef(Button)
                                  disabled={true}
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Play
                                </ForwardRef(Button)>
                                <ForwardRef(Button)
                                  disabled={true}
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Stop
                                </ForwardRef(Button)>
                              </ForwardRef(ButtonGroup)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                            />,
                            <ForwardRef(Grid)
                              item={true}
                            >
                              <ForwardRef(Button)
                                data-test="button-close"
                                onClick={[Function]}
                                startIcon={<Memo />}
                              >
                                Close
                              </ForwardRef(Button)>
                            </ForwardRef(Grid)>,
                          ],
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": false,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "center",
                            "justifyContent": "space-between",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": false,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined css-1oukqxz-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "children": <ForwardRef(ButtonGroup)
                                  aria-label="preview cart"
                                  variant="contained"
                                >
                                  <ForwardRef(Button)
                                    disabled={true}
                                    onClick={[Function]}
                                    startIcon={<Memo />}
                                  >
                                    Play
                                  </ForwardRef(Button)>
                                  <ForwardRef(Button)
                                    disabled={true}
                                    onClick={[Function]}
                                    startIcon={<Memo />}
                                  >
                                    Stop
                                  </ForwardRef(Button)>
                                </ForwardRef(ButtonGroup)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            >
                              <ForwardRef(ButtonGroup)
                                aria-label="preview cart"
                                variant="contained"
                              >
                                <MuiButtonGroupRoot
                                  aria-label="preview cart"
                                  as="div"
                                  className="MuiButtonGroup-root MuiButtonGroup-contained"
                                  ownerState={
                                    Object {
                                      "aria-label": "preview cart",
                                      "children": Array [
                                        <ForwardRef(Button)
                                          disabled={true}
                                          onClick={[Function]}
                                          startIcon={<Memo />}
                                        >
                                          Play
                                        </ForwardRef(Button)>,
                                        <ForwardRef(Button)
                                          disabled={true}
                                          onClick={[Function]}
                                          startIcon={<Memo />}
                                        >
                                          Stop
                                        </ForwardRef(Button)>,
                                      ],
                                      "color": "primary",
                                      "component": "div",
                                      "disableElevation": false,
                                      "disableFocusRipple": false,
                                      "disableRipple": false,
                                      "disabled": false,
                                      "fullWidth": false,
                                      "orientation": "horizontal",
                                      "size": "medium",
                                      "variant": "contained",
                                    }
                                  }
                                  role="group"
                                >
                                  <div
                                    aria-label="preview cart"
                                    className="MuiButtonGroup-root MuiButtonGroup-contained css-dr3dyz-MuiButtonGroup-root"
                                    role="group"
                                  >
                                    <ForwardRef(Button)
                                      className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                      color="primary"
                                      disableElevation={false}
                                      disableFocusRipple={false}
                                      disableRipple={false}
                                      disabled={true}
                                      fullWidth={false}
                                      key=".0"
                                      onClick={[Function]}
                                      size="medium"
                                      startIcon={<Memo />}
                                      variant="contained"
                                    >
                                      <MuiButtonRoot
                                        className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disabled={true}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "Play",
                                            "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disableRipple": false,
                                            "disabled": true,
                                            "fullWidth": false,
                                            "onClick": [Function],
                                            "size": "medium",
                                            "startIcon": <Memo />,
                                            "type": undefined,
                                            "variant": "contained",
                                          }
                                        }
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disableRipple={false}
                                          disabled={true}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  <MuiButtonStartIcon
                                                    className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                    ownerState={
                                                      Object {
                                                        "children": "Play",
                                                        "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                        "color": "primary",
                                                        "component": "button",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disableRipple": false,
                                                        "disabled": true,
                                                        "fullWidth": false,
                                                        "onClick": [Function],
                                                        "size": "medium",
                                                        "startIcon": <Memo />,
                                                        "type": undefined,
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Memo />
                                                  </MuiButtonStartIcon>,
                                                  "Play",
                                                  undefined,
                                                ],
                                                "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": true,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={-1}
                                            type="button"
                                          >
                                            <button
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root"
                                              disabled={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <MuiButtonStartIcon
                                                className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                ownerState={
                                                  Object {
                                                    "children": "Play",
                                                    "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                    "color": "primary",
                                                    "component": "button",
                                                    "disableElevation": false,
                                                    "disableFocusRipple": false,
                                                    "disableRipple": false,
                                                    "disabled": true,
                                                    "fullWidth": false,
                                                    "onClick": [Function],
                                                    "size": "medium",
                                                    "startIcon": <Memo />,
                                                    "type": undefined,
                                                    "variant": "contained",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                                >
                                                  <ForwardRef(PlayArrowIcon)>
                                                    <ForwardRef(SvgIcon)
                                                      data-testid="PlayArrowIcon"
                                                    >
                                                      <MuiSvgIconRoot
                                                        aria-hidden={true}
                                                        as="svg"
                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                        data-testid="PlayArrowIcon"
                                                        focusable="false"
                                                        ownerState={
                                                          Object {
                                                            "children": <path
                                                              d="M8 5v14l11-7z"
                                                            />,
                                                            "color": "inherit",
                                                            "component": "svg",
                                                            "data-testid": "PlayArrowIcon",
                                                            "fontSize": "medium",
                                                            "viewBox": "0 0 24 24",
                                                          }
                                                        }
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                          data-testid="PlayArrowIcon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M8 5v14l11-7z"
                                                          />
                                                        </svg>
                                                      </MuiSvgIconRoot>
                                                    </ForwardRef(SvgIcon)>
                                                  </ForwardRef(PlayArrowIcon)>
                                                </span>
                                              </MuiButtonStartIcon>
                                              Play
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                    <ForwardRef(Button)
                                      className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                      color="primary"
                                      disableElevation={false}
                                      disableFocusRipple={false}
                                      disableRipple={false}
                                      disabled={true}
                                      fullWidth={false}
                                      key=".1"
                                      onClick={[Function]}
                                      size="medium"
                                      startIcon={<Memo />}
                                      variant="contained"
                                    >
                                      <MuiButtonRoot
                                        className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disabled={true}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "Stop",
                                            "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disableRipple": false,
                                            "disabled": true,
                                            "fullWidth": false,
                                            "onClick": [Function],
                                            "size": "medium",
                                            "startIcon": <Memo />,
                                            "type": undefined,
                                            "variant": "contained",
                                          }
                                        }
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disableRipple={false}
                                          disabled={true}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  <MuiButtonStartIcon
                                                    className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                    ownerState={
                                                      Object {
                                                        "children": "Stop",
                                                        "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                        "color": "primary",
                                                        "component": "button",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disableRipple": false,
                                                        "disabled": true,
                                                        "fullWidth": false,
                                                        "onClick": [Function],
                                                        "size": "medium",
                                                        "startIcon": <Memo />,
                                                        "type": undefined,
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Memo />
                                                  </MuiButtonStartIcon>,
                                                  "Stop",
                                                  undefined,
                                                ],
                                                "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": true,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={-1}
                                            type="button"
                                          >
                                            <button
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root"
                                              disabled={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <MuiButtonStartIcon
                                                className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                ownerState={
                                                  Object {
                                                    "children": "Stop",
                                                    "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                    "color": "primary",
                                                    "component": "button",
                                                    "disableElevation": false,
                                                    "disableFocusRipple": false,
                                                    "disableRipple": false,
                                                    "disabled": true,
                                                    "fullWidth": false,
                                                    "onClick": [Function],
                                                    "size": "medium",
                                                    "startIcon": <Memo />,
                                                    "type": undefined,
                                                    "variant": "contained",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                                >
                                                  <ForwardRef(StopIcon)>
                                                    <ForwardRef(SvgIcon)
                                                      data-testid="StopIcon"
                                                    >
                                                      <MuiSvgIconRoot
                                                        aria-hidden={true}
                                                        as="svg"
                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                        data-testid="StopIcon"
                                                        focusable="false"
                                                        ownerState={
                                                          Object {
                                                            "children": <path
                                                              d="M6 6h12v12H6z"
                                                            />,
                                                            "color": "inherit",
                                                            "component": "svg",
                                                            "data-testid": "StopIcon",
                                                            "fontSize": "medium",
                                                            "viewBox": "0 0 24 24",
                                                          }
                                                        }
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                          data-testid="StopIcon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 6h12v12H6z"
                                                          />
                                                        </svg>
                                                      </MuiSvgIconRoot>
                                                    </ForwardRef(SvgIcon)>
                                                  </ForwardRef(StopIcon)>
                                                </span>
                                              </MuiButtonStartIcon>
                                              Stop
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                  </div>
                                </MuiButtonGroupRoot>
                              </ForwardRef(ButtonGroup)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            />
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Button)
                                  data-test="button-close"
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Close
                                </ForwardRef(Button)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            >
                              <ForwardRef(Button)
                                data-test="button-close"
                                onClick={[Function]}
                                startIcon={<Memo />}
                              >
                                <MuiButtonRoot
                                  classes={
                                    Object {
                                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                      "label": "MuiButton-label",
                                      "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                    }
                                  }
                                  component="button"
                                  data-test="button-close"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName=""
                                  onClick={[Function]}
                                  ownerState={
                                    Object {
                                      "children": "Close",
                                      "color": "primary",
                                      "component": "button",
                                      "data-test": "button-close",
                                      "disableElevation": false,
                                      "disableFocusRipple": false,
                                      "disabled": false,
                                      "fullWidth": false,
                                      "onClick": [Function],
                                      "size": "medium",
                                      "startIcon": <Memo />,
                                      "type": undefined,
                                      "variant": "text",
                                    }
                                  }
                                >
                                  <ForwardRef(ButtonBase)
                                    className="css-w60cv3-MuiButton-root"
                                    classes={
                                      Object {
                                        "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                        "label": "MuiButton-label",
                                        "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                        "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                      }
                                    }
                                    component="button"
                                    data-test="button-close"
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName=""
                                    onClick={[Function]}
                                  >
                                    <MuiButtonBaseRoot
                                      as="button"
                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-w60cv3-MuiButton-root"
                                      classes={
                                        Object {
                                          "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                          "label": "MuiButton-label",
                                          "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                          "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                        }
                                      }
                                      data-test="button-close"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      ownerState={
                                        Object {
                                          "centerRipple": false,
                                          "children": Array [
                                            <MuiButtonStartIcon
                                              className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                              ownerState={
                                                Object {
                                                  "children": "Close",
                                                  "color": "primary",
                                                  "component": "button",
                                                  "data-test": "button-close",
                                                  "disableElevation": false,
                                                  "disableFocusRipple": false,
                                                  "disabled": false,
                                                  "fullWidth": false,
                                                  "onClick": [Function],
                                                  "size": "medium",
                                                  "startIcon": <Memo />,
                                                  "type": undefined,
                                                  "variant": "text",
                                                }
                                              }
                                            >
                                              <Memo />
                                            </MuiButtonStartIcon>,
                                            "Close",
                                            undefined,
                                          ],
                                          "className": "css-w60cv3-MuiButton-root",
                                          "classes": Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          },
                                          "component": "button",
                                          "data-test": "button-close",
                                          "disableRipple": false,
                                          "disableTouchRipple": false,
                                          "disabled": false,
                                          "focusRipple": true,
                                          "focusVisible": false,
                                          "focusVisibleClassName": "",
                                          "onClick": [Function],
                                          "tabIndex": 0,
                                          "type": undefined,
                                        }
                                      }
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <button
                                        className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-1e6y48t-MuiButtonBase-root-MuiButton-root"
                                        data-test="button-close"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onContextMenu={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <MuiButtonStartIcon
                                          className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                          ownerState={
                                            Object {
                                              "children": "Close",
                                              "color": "primary",
                                              "component": "button",
                                              "data-test": "button-close",
                                              "disableElevation": false,
                                              "disableFocusRipple": false,
                                              "disabled": false,
                                              "fullWidth": false,
                                              "onClick": [Function],
                                              "size": "medium",
                                              "startIcon": <Memo />,
                                              "type": undefined,
                                              "variant": "text",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                          >
                                            <ForwardRef(CloseIcon)>
                                              <ForwardRef(SvgIcon)
                                                data-testid="CloseIcon"
                                              >
                                                <MuiSvgIconRoot
                                                  aria-hidden={true}
                                                  as="svg"
                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                  data-testid="CloseIcon"
                                                  focusable="false"
                                                  ownerState={
                                                    Object {
                                                      "children": <path
                                                        d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                      />,
                                                      "color": "inherit",
                                                      "component": "svg",
                                                      "data-testid": "CloseIcon",
                                                      "fontSize": "medium",
                                                      "viewBox": "0 0 24 24",
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                    data-testid="CloseIcon"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </MuiSvgIconRoot>
                                              </ForwardRef(SvgIcon)>
                                            </ForwardRef(CloseIcon)>
                                          </span>
                                        </MuiButtonStartIcon>
                                        Close
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                        >
                                          <MuiTouchRippleRoot
                                            className="MuiTouchRipple-root"
                                          >
                                            <span
                                              className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </MuiTouchRippleRoot>
                                        </ForwardRef(TouchRipple)>
                                      </button>
                                    </MuiButtonBaseRoot>
                                  </ForwardRef(ButtonBase)>
                                </MuiButtonRoot>
                              </ForwardRef(Button)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Alert)
                    data-test="preview-error"
                    severity="error"
                    variant="outlined"
                  >
                    <MuiAlertRoot
                      className="MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined"
                      data-test="preview-error"
                      elevation={0}
                      ownerState={
                        Object {
                          "children": "Something went wrong trying to preview cart audio. Please try again later.",
                          "color": undefined,
                          "data-test": "preview-error",
                          "severity": "error",
                          "variant": "outlined",
                        }
                      }
                      role="alert"
                      square={true}
                    >
                      <ForwardRef(Paper)
                        className="MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined css-y1cess-MuiAlert-root"
                        data-test="preview-error"
                        elevation={0}
                        role="alert"
                        square={true}
                      >
                        <MuiPaperRoot
                          as="div"
                          className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined css-y1cess-MuiAlert-root"
                          data-test="preview-error"
                          ownerState={
                            Object {
                              "children": Array [
                                <MuiAlertIcon
                                  className="MuiAlert-icon"
                                  ownerState={
                                    Object {
                                      "children": "Something went wrong trying to preview cart audio. Please try again later.",
                                      "color": undefined,
                                      "data-test": "preview-error",
                                      "severity": "error",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Memo
                                    fontSize="inherit"
                                  />
                                </MuiAlertIcon>,
                                <MuiAlertMessage
                                  className="MuiAlert-message"
                                  ownerState={
                                    Object {
                                      "children": "Something went wrong trying to preview cart audio. Please try again later.",
                                      "color": undefined,
                                      "data-test": "preview-error",
                                      "severity": "error",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  Something went wrong trying to preview cart audio. Please try again later.
                                </MuiAlertMessage>,
                                null,
                                null,
                              ],
                              "className": "MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined css-y1cess-MuiAlert-root",
                              "component": "div",
                              "data-test": "preview-error",
                              "elevation": 0,
                              "role": "alert",
                              "square": true,
                              "variant": "elevation",
                            }
                          }
                          role="alert"
                        >
                          <div
                            className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined css-134l0rj-MuiPaper-root-MuiAlert-root"
                            data-test="preview-error"
                            role="alert"
                          >
                            <MuiAlertIcon
                              className="MuiAlert-icon"
                              ownerState={
                                Object {
                                  "children": "Something went wrong trying to preview cart audio. Please try again later.",
                                  "color": undefined,
                                  "data-test": "preview-error",
                                  "severity": "error",
                                  "variant": "outlined",
                                }
                              }
                            >
                              <div
                                className="MuiAlert-icon css-1ytlwq5-MuiAlert-icon"
                              >
                                <ForwardRef(ErrorOutlineIcon)
                                  fontSize="inherit"
                                >
                                  <ForwardRef(SvgIcon)
                                    data-testid="ErrorOutlineIcon"
                                    fontSize="inherit"
                                  >
                                    <MuiSvgIconRoot
                                      aria-hidden={true}
                                      as="svg"
                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                      data-testid="ErrorOutlineIcon"
                                      focusable="false"
                                      ownerState={
                                        Object {
                                          "children": <path
                                            d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                          />,
                                          "color": "inherit",
                                          "component": "svg",
                                          "data-testid": "ErrorOutlineIcon",
                                          "fontSize": "inherit",
                                          "viewBox": "0 0 24 24",
                                        }
                                      }
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                        data-testid="ErrorOutlineIcon"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                        />
                                      </svg>
                                    </MuiSvgIconRoot>
                                  </ForwardRef(SvgIcon)>
                                </ForwardRef(ErrorOutlineIcon)>
                              </div>
                            </MuiAlertIcon>
                            <MuiAlertMessage
                              className="MuiAlert-message"
                              ownerState={
                                Object {
                                  "children": "Something went wrong trying to preview cart audio. Please try again later.",
                                  "color": undefined,
                                  "data-test": "preview-error",
                                  "severity": "error",
                                  "variant": "outlined",
                                }
                              }
                            >
                              <div
                                className="MuiAlert-message css-acap47-MuiAlert-message"
                              >
                                Something went wrong trying to preview cart audio. Please try again later.
                              </div>
                            </MuiAlertMessage>
                          </div>
                        </MuiPaperRoot>
                      </ForwardRef(Paper)>
                    </MuiAlertRoot>
                  </ForwardRef(Alert)>
                </div>
              </div>
            </MuiPaperRoot>
          </ForwardRef(Paper)>
        </MuiDrawerPaper>
      </div>
    </MuiDrawerDocked>
  </ForwardRef(Drawer)>
</PreviewPlayer>
`;

exports[`unhappy path fails on second http request 1`] = `
<PreviewPlayer>
  <ForwardRef(Drawer)
    anchor="bottom"
    open={true}
    variant="permanent"
  >
    <MuiDrawerDocked
      className="MuiDrawer-root MuiDrawer-docked"
      ownerState={
        Object {
          "anchor": "bottom",
          "children": <div
            className="makeStyles-player-1"
          >
            <ForwardRef(Grid)
              alignItems="center"
              container={true}
              justifyContent="space-between"
            >
              <ForwardRef(Grid)
                item={true}
              >
                <ForwardRef(ButtonGroup)
                  aria-label="preview cart"
                  variant="contained"
                >
                  <ForwardRef(Button)
                    disabled={true}
                    onClick={[Function]}
                    startIcon={<Memo />}
                  >
                    Play
                  </ForwardRef(Button)>
                  <ForwardRef(Button)
                    disabled={true}
                    onClick={[Function]}
                    startIcon={<Memo />}
                  >
                    Stop
                  </ForwardRef(Button)>
                </ForwardRef(ButtonGroup)>
              </ForwardRef(Grid)>
              <ForwardRef(Grid)
                item={true}
              />
              <ForwardRef(Grid)
                item={true}
              >
                <ForwardRef(Button)
                  data-test="button-close"
                  onClick={[Function]}
                  startIcon={<Memo />}
                >
                  Close
                </ForwardRef(Button)>
              </ForwardRef(Grid)>
            </ForwardRef(Grid)>
            <ForwardRef(Alert)
              data-test="preview-error"
              severity="error"
              variant="outlined"
            >
              Something went wrong trying to preview cart audio. Please try again later.
            </ForwardRef(Alert)>
          </div>,
          "elevation": 16,
          "open": true,
          "variant": "permanent",
        }
      }
    >
      <div
        className="MuiDrawer-root MuiDrawer-docked css-7ik032-MuiDrawer-docked"
      >
        <MuiDrawerPaper
          className="MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom"
          elevation={0}
          ownerState={
            Object {
              "anchor": "bottom",
              "children": <div
                className="makeStyles-player-1"
              >
                <ForwardRef(Grid)
                  alignItems="center"
                  container={true}
                  justifyContent="space-between"
                >
                  <ForwardRef(Grid)
                    item={true}
                  >
                    <ForwardRef(ButtonGroup)
                      aria-label="preview cart"
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        disabled={true}
                        onClick={[Function]}
                        startIcon={<Memo />}
                      >
                        Play
                      </ForwardRef(Button)>
                      <ForwardRef(Button)
                        disabled={true}
                        onClick={[Function]}
                        startIcon={<Memo />}
                      >
                        Stop
                      </ForwardRef(Button)>
                    </ForwardRef(ButtonGroup)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                  />
                  <ForwardRef(Grid)
                    item={true}
                  >
                    <ForwardRef(Button)
                      data-test="button-close"
                      onClick={[Function]}
                      startIcon={<Memo />}
                    >
                      Close
                    </ForwardRef(Button)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
                <ForwardRef(Alert)
                  data-test="preview-error"
                  severity="error"
                  variant="outlined"
                >
                  Something went wrong trying to preview cart audio. Please try again later.
                </ForwardRef(Alert)>
              </div>,
              "elevation": 16,
              "open": true,
              "variant": "permanent",
            }
          }
          square={true}
        >
          <ForwardRef(Paper)
            className="MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper"
            elevation={0}
            square={true}
          >
            <MuiPaperRoot
              as="div"
              className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper"
              ownerState={
                Object {
                  "children": <div
                    className="makeStyles-player-1"
                  >
                    <ForwardRef(Grid)
                      alignItems="center"
                      container={true}
                      justifyContent="space-between"
                    >
                      <ForwardRef(Grid)
                        item={true}
                      >
                        <ForwardRef(ButtonGroup)
                          aria-label="preview cart"
                          variant="contained"
                        >
                          <ForwardRef(Button)
                            disabled={true}
                            onClick={[Function]}
                            startIcon={<Memo />}
                          >
                            Play
                          </ForwardRef(Button)>
                          <ForwardRef(Button)
                            disabled={true}
                            onClick={[Function]}
                            startIcon={<Memo />}
                          >
                            Stop
                          </ForwardRef(Button)>
                        </ForwardRef(ButtonGroup)>
                      </ForwardRef(Grid)>
                      <ForwardRef(Grid)
                        item={true}
                      />
                      <ForwardRef(Grid)
                        item={true}
                      >
                        <ForwardRef(Button)
                          data-test="button-close"
                          onClick={[Function]}
                          startIcon={<Memo />}
                        >
                          Close
                        </ForwardRef(Button)>
                      </ForwardRef(Grid)>
                    </ForwardRef(Grid)>
                    <ForwardRef(Alert)
                      data-test="preview-error"
                      severity="error"
                      variant="outlined"
                    >
                      Something went wrong trying to preview cart audio. Please try again later.
                    </ForwardRef(Alert)>
                  </div>,
                  "className": "MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1rv6z5s-MuiDrawer-paper",
                  "component": "div",
                  "elevation": 0,
                  "square": true,
                  "variant": "elevation",
                }
              }
            >
              <div
                className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiDrawer-paper MuiDrawer-paperAnchorBottom MuiDrawer-paperAnchorDockedBottom css-1ic0da0-MuiPaper-root-MuiDrawer-paper"
              >
                <div
                  className="makeStyles-player-1"
                >
                  <ForwardRef(Grid)
                    alignItems="center"
                    container={true}
                    justifyContent="space-between"
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                            >
                              <ForwardRef(ButtonGroup)
                                aria-label="preview cart"
                                variant="contained"
                              >
                                <ForwardRef(Button)
                                  disabled={true}
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Play
                                </ForwardRef(Button)>
                                <ForwardRef(Button)
                                  disabled={true}
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Stop
                                </ForwardRef(Button)>
                              </ForwardRef(ButtonGroup)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                            />,
                            <ForwardRef(Grid)
                              item={true}
                            >
                              <ForwardRef(Button)
                                data-test="button-close"
                                onClick={[Function]}
                                startIcon={<Memo />}
                              >
                                Close
                              </ForwardRef(Button)>
                            </ForwardRef(Grid)>,
                          ],
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": false,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "center",
                            "justifyContent": "space-between",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": false,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "center",
                          "justifyContent": "space-between",
                        }
                      }
                    >
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-undefined css-1oukqxz-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "children": <ForwardRef(ButtonGroup)
                                  aria-label="preview cart"
                                  variant="contained"
                                >
                                  <ForwardRef(Button)
                                    disabled={true}
                                    onClick={[Function]}
                                    startIcon={<Memo />}
                                  >
                                    Play
                                  </ForwardRef(Button)>
                                  <ForwardRef(Button)
                                    disabled={true}
                                    onClick={[Function]}
                                    startIcon={<Memo />}
                                  >
                                    Stop
                                  </ForwardRef(Button)>
                                </ForwardRef(ButtonGroup)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            >
                              <ForwardRef(ButtonGroup)
                                aria-label="preview cart"
                                variant="contained"
                              >
                                <MuiButtonGroupRoot
                                  aria-label="preview cart"
                                  as="div"
                                  className="MuiButtonGroup-root MuiButtonGroup-contained"
                                  ownerState={
                                    Object {
                                      "aria-label": "preview cart",
                                      "children": Array [
                                        <ForwardRef(Button)
                                          disabled={true}
                                          onClick={[Function]}
                                          startIcon={<Memo />}
                                        >
                                          Play
                                        </ForwardRef(Button)>,
                                        <ForwardRef(Button)
                                          disabled={true}
                                          onClick={[Function]}
                                          startIcon={<Memo />}
                                        >
                                          Stop
                                        </ForwardRef(Button)>,
                                      ],
                                      "color": "primary",
                                      "component": "div",
                                      "disableElevation": false,
                                      "disableFocusRipple": false,
                                      "disableRipple": false,
                                      "disabled": false,
                                      "fullWidth": false,
                                      "orientation": "horizontal",
                                      "size": "medium",
                                      "variant": "contained",
                                    }
                                  }
                                  role="group"
                                >
                                  <div
                                    aria-label="preview cart"
                                    className="MuiButtonGroup-root MuiButtonGroup-contained css-dr3dyz-MuiButtonGroup-root"
                                    role="group"
                                  >
                                    <ForwardRef(Button)
                                      className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                      color="primary"
                                      disableElevation={false}
                                      disableFocusRipple={false}
                                      disableRipple={false}
                                      disabled={true}
                                      fullWidth={false}
                                      key=".0"
                                      onClick={[Function]}
                                      size="medium"
                                      startIcon={<Memo />}
                                      variant="contained"
                                    >
                                      <MuiButtonRoot
                                        className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disabled={true}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "Play",
                                            "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disableRipple": false,
                                            "disabled": true,
                                            "fullWidth": false,
                                            "onClick": [Function],
                                            "size": "medium",
                                            "startIcon": <Memo />,
                                            "type": undefined,
                                            "variant": "contained",
                                          }
                                        }
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disableRipple={false}
                                          disabled={true}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  <MuiButtonStartIcon
                                                    className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                    ownerState={
                                                      Object {
                                                        "children": "Play",
                                                        "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                        "color": "primary",
                                                        "component": "button",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disableRipple": false,
                                                        "disabled": true,
                                                        "fullWidth": false,
                                                        "onClick": [Function],
                                                        "size": "medium",
                                                        "startIcon": <Memo />,
                                                        "type": undefined,
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Memo />
                                                  </MuiButtonStartIcon>,
                                                  "Play",
                                                  undefined,
                                                ],
                                                "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": true,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={-1}
                                            type="button"
                                          >
                                            <button
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root"
                                              disabled={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <MuiButtonStartIcon
                                                className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                ownerState={
                                                  Object {
                                                    "children": "Play",
                                                    "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                    "color": "primary",
                                                    "component": "button",
                                                    "disableElevation": false,
                                                    "disableFocusRipple": false,
                                                    "disableRipple": false,
                                                    "disabled": true,
                                                    "fullWidth": false,
                                                    "onClick": [Function],
                                                    "size": "medium",
                                                    "startIcon": <Memo />,
                                                    "type": undefined,
                                                    "variant": "contained",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                                >
                                                  <ForwardRef(PlayArrowIcon)>
                                                    <ForwardRef(SvgIcon)
                                                      data-testid="PlayArrowIcon"
                                                    >
                                                      <MuiSvgIconRoot
                                                        aria-hidden={true}
                                                        as="svg"
                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                        data-testid="PlayArrowIcon"
                                                        focusable="false"
                                                        ownerState={
                                                          Object {
                                                            "children": <path
                                                              d="M8 5v14l11-7z"
                                                            />,
                                                            "color": "inherit",
                                                            "component": "svg",
                                                            "data-testid": "PlayArrowIcon",
                                                            "fontSize": "medium",
                                                            "viewBox": "0 0 24 24",
                                                          }
                                                        }
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                          data-testid="PlayArrowIcon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M8 5v14l11-7z"
                                                          />
                                                        </svg>
                                                      </MuiSvgIconRoot>
                                                    </ForwardRef(SvgIcon)>
                                                  </ForwardRef(PlayArrowIcon)>
                                                </span>
                                              </MuiButtonStartIcon>
                                              Play
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                    <ForwardRef(Button)
                                      className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                      color="primary"
                                      disableElevation={false}
                                      disableFocusRipple={false}
                                      disableRipple={false}
                                      disabled={true}
                                      fullWidth={false}
                                      key=".1"
                                      onClick={[Function]}
                                      size="medium"
                                      startIcon={<Memo />}
                                      variant="contained"
                                    >
                                      <MuiButtonRoot
                                        className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary"
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disabled={true}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "Stop",
                                            "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disableRipple": false,
                                            "disabled": true,
                                            "fullWidth": false,
                                            "onClick": [Function],
                                            "size": "medium",
                                            "startIcon": <Memo />,
                                            "type": undefined,
                                            "variant": "contained",
                                          }
                                        }
                                      >
                                        <ForwardRef(ButtonBase)
                                          className="MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disableRipple={false}
                                          disabled={true}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={true}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  <MuiButtonStartIcon
                                                    className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                    ownerState={
                                                      Object {
                                                        "children": "Stop",
                                                        "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                        "color": "primary",
                                                        "component": "button",
                                                        "disableElevation": false,
                                                        "disableFocusRipple": false,
                                                        "disableRipple": false,
                                                        "disabled": true,
                                                        "fullWidth": false,
                                                        "onClick": [Function],
                                                        "size": "medium",
                                                        "startIcon": <Memo />,
                                                        "type": undefined,
                                                        "variant": "contained",
                                                      }
                                                    }
                                                  >
                                                    <Memo />
                                                  </MuiButtonStartIcon>,
                                                  "Stop",
                                                  undefined,
                                                ],
                                                "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-1yu95zv-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": true,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={-1}
                                            type="button"
                                          >
                                            <button
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary css-sghohy-MuiButtonBase-root-MuiButton-root"
                                              disabled={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={-1}
                                              type="button"
                                            >
                                              <MuiButtonStartIcon
                                                className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                                ownerState={
                                                  Object {
                                                    "children": "Stop",
                                                    "className": "MuiButtonGroup-grouped MuiButtonGroup-groupedHorizontal MuiButtonGroup-groupedContained MuiButtonGroup-groupedContainedHorizontal MuiButtonGroup-groupedContainedPrimary",
                                                    "color": "primary",
                                                    "component": "button",
                                                    "disableElevation": false,
                                                    "disableFocusRipple": false,
                                                    "disableRipple": false,
                                                    "disabled": true,
                                                    "fullWidth": false,
                                                    "onClick": [Function],
                                                    "size": "medium",
                                                    "startIcon": <Memo />,
                                                    "type": undefined,
                                                    "variant": "contained",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                                >
                                                  <ForwardRef(StopIcon)>
                                                    <ForwardRef(SvgIcon)
                                                      data-testid="StopIcon"
                                                    >
                                                      <MuiSvgIconRoot
                                                        aria-hidden={true}
                                                        as="svg"
                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                        data-testid="StopIcon"
                                                        focusable="false"
                                                        ownerState={
                                                          Object {
                                                            "children": <path
                                                              d="M6 6h12v12H6z"
                                                            />,
                                                            "color": "inherit",
                                                            "component": "svg",
                                                            "data-testid": "StopIcon",
                                                            "fontSize": "medium",
                                                            "viewBox": "0 0 24 24",
                                                          }
                                                        }
                                                        viewBox="0 0 24 24"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                          data-testid="StopIcon"
                                                          focusable="false"
                                                          viewBox="0 0 24 24"
                                                        >
                                                          <path
                                                            d="M6 6h12v12H6z"
                                                          />
                                                        </svg>
                                                      </MuiSvgIconRoot>
                                                    </ForwardRef(SvgIcon)>
                                                  </ForwardRef(StopIcon)>
                                                </span>
                                              </MuiButtonStartIcon>
                                              Stop
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                  </div>
                                </MuiButtonGroupRoot>
                              </ForwardRef(ButtonGroup)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            />
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Button)
                                  data-test="button-close"
                                  onClick={[Function]}
                                  startIcon={<Memo />}
                                >
                                  Close
                                </ForwardRef(Button)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": false,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <div
                              className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                            >
                              <ForwardRef(Button)
                                data-test="button-close"
                                onClick={[Function]}
                                startIcon={<Memo />}
                              >
                                <MuiButtonRoot
                                  classes={
                                    Object {
                                      "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                      "label": "MuiButton-label",
                                      "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                      "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                    }
                                  }
                                  component="button"
                                  data-test="button-close"
                                  disabled={false}
                                  focusRipple={true}
                                  focusVisibleClassName=""
                                  onClick={[Function]}
                                  ownerState={
                                    Object {
                                      "children": "Close",
                                      "color": "primary",
                                      "component": "button",
                                      "data-test": "button-close",
                                      "disableElevation": false,
                                      "disableFocusRipple": false,
                                      "disabled": false,
                                      "fullWidth": false,
                                      "onClick": [Function],
                                      "size": "medium",
                                      "startIcon": <Memo />,
                                      "type": undefined,
                                      "variant": "text",
                                    }
                                  }
                                >
                                  <ForwardRef(ButtonBase)
                                    className="css-w60cv3-MuiButton-root"
                                    classes={
                                      Object {
                                        "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                        "label": "MuiButton-label",
                                        "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                        "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                      }
                                    }
                                    component="button"
                                    data-test="button-close"
                                    disabled={false}
                                    focusRipple={true}
                                    focusVisibleClassName=""
                                    onClick={[Function]}
                                  >
                                    <MuiButtonBaseRoot
                                      as="button"
                                      className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-w60cv3-MuiButton-root"
                                      classes={
                                        Object {
                                          "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                          "label": "MuiButton-label",
                                          "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                          "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                        }
                                      }
                                      data-test="button-close"
                                      disabled={false}
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onContextMenu={[Function]}
                                      onDragLeave={[Function]}
                                      onFocus={[Function]}
                                      onKeyDown={[Function]}
                                      onKeyUp={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseLeave={[Function]}
                                      onMouseUp={[Function]}
                                      onTouchEnd={[Function]}
                                      onTouchMove={[Function]}
                                      onTouchStart={[Function]}
                                      ownerState={
                                        Object {
                                          "centerRipple": false,
                                          "children": Array [
                                            <MuiButtonStartIcon
                                              className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                              ownerState={
                                                Object {
                                                  "children": "Close",
                                                  "color": "primary",
                                                  "component": "button",
                                                  "data-test": "button-close",
                                                  "disableElevation": false,
                                                  "disableFocusRipple": false,
                                                  "disabled": false,
                                                  "fullWidth": false,
                                                  "onClick": [Function],
                                                  "size": "medium",
                                                  "startIcon": <Memo />,
                                                  "type": undefined,
                                                  "variant": "text",
                                                }
                                              }
                                            >
                                              <Memo />
                                            </MuiButtonStartIcon>,
                                            "Close",
                                            undefined,
                                          ],
                                          "className": "css-w60cv3-MuiButton-root",
                                          "classes": Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          },
                                          "component": "button",
                                          "data-test": "button-close",
                                          "disableRipple": false,
                                          "disableTouchRipple": false,
                                          "disabled": false,
                                          "focusRipple": true,
                                          "focusVisible": false,
                                          "focusVisibleClassName": "",
                                          "onClick": [Function],
                                          "tabIndex": 0,
                                          "type": undefined,
                                        }
                                      }
                                      tabIndex={0}
                                      type="button"
                                    >
                                      <button
                                        className="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root css-1e6y48t-MuiButtonBase-root-MuiButton-root"
                                        data-test="button-close"
                                        disabled={false}
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onContextMenu={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        tabIndex={0}
                                        type="button"
                                      >
                                        <MuiButtonStartIcon
                                          className="MuiButton-startIcon MuiButton-iconSizeMedium"
                                          ownerState={
                                            Object {
                                              "children": "Close",
                                              "color": "primary",
                                              "component": "button",
                                              "data-test": "button-close",
                                              "disableElevation": false,
                                              "disableFocusRipple": false,
                                              "disabled": false,
                                              "fullWidth": false,
                                              "onClick": [Function],
                                              "size": "medium",
                                              "startIcon": <Memo />,
                                              "type": undefined,
                                              "variant": "text",
                                            }
                                          }
                                        >
                                          <span
                                            className="MuiButton-startIcon MuiButton-iconSizeMedium css-1d6wzja-MuiButton-startIcon"
                                          >
                                            <ForwardRef(CloseIcon)>
                                              <ForwardRef(SvgIcon)
                                                data-testid="CloseIcon"
                                              >
                                                <MuiSvgIconRoot
                                                  aria-hidden={true}
                                                  as="svg"
                                                  className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                  data-testid="CloseIcon"
                                                  focusable="false"
                                                  ownerState={
                                                    Object {
                                                      "children": <path
                                                        d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                      />,
                                                      "color": "inherit",
                                                      "component": "svg",
                                                      "data-testid": "CloseIcon",
                                                      "fontSize": "medium",
                                                      "viewBox": "0 0 24 24",
                                                    }
                                                  }
                                                  viewBox="0 0 24 24"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                    data-testid="CloseIcon"
                                                    focusable="false"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <path
                                                      d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
                                                    />
                                                  </svg>
                                                </MuiSvgIconRoot>
                                              </ForwardRef(SvgIcon)>
                                            </ForwardRef(CloseIcon)>
                                          </span>
                                        </MuiButtonStartIcon>
                                        Close
                                        <ForwardRef(TouchRipple)
                                          center={false}
                                        >
                                          <MuiTouchRippleRoot
                                            className="MuiTouchRipple-root"
                                          >
                                            <span
                                              className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                            >
                                              <TransitionGroup
                                                childFactory={[Function]}
                                                component={null}
                                                exit={true}
                                              />
                                            </span>
                                          </MuiTouchRippleRoot>
                                        </ForwardRef(TouchRipple)>
                                      </button>
                                    </MuiButtonBaseRoot>
                                  </ForwardRef(ButtonBase)>
                                </MuiButtonRoot>
                              </ForwardRef(Button)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Alert)
                    data-test="preview-error"
                    severity="error"
                    variant="outlined"
                  >
                    <MuiAlertRoot
                      className="MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined"
                      data-test="preview-error"
                      elevation={0}
                      ownerState={
                        Object {
                          "children": "Something went wrong trying to preview cart audio. Please try again later.",
                          "color": undefined,
                          "data-test": "preview-error",
                          "severity": "error",
                          "variant": "outlined",
                        }
                      }
                      role="alert"
                      square={true}
                    >
                      <ForwardRef(Paper)
                        className="MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined css-y1cess-MuiAlert-root"
                        data-test="preview-error"
                        elevation={0}
                        role="alert"
                        square={true}
                      >
                        <MuiPaperRoot
                          as="div"
                          className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined css-y1cess-MuiAlert-root"
                          data-test="preview-error"
                          ownerState={
                            Object {
                              "children": Array [
                                <MuiAlertIcon
                                  className="MuiAlert-icon"
                                  ownerState={
                                    Object {
                                      "children": "Something went wrong trying to preview cart audio. Please try again later.",
                                      "color": undefined,
                                      "data-test": "preview-error",
                                      "severity": "error",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  <Memo
                                    fontSize="inherit"
                                  />
                                </MuiAlertIcon>,
                                <MuiAlertMessage
                                  className="MuiAlert-message"
                                  ownerState={
                                    Object {
                                      "children": "Something went wrong trying to preview cart audio. Please try again later.",
                                      "color": undefined,
                                      "data-test": "preview-error",
                                      "severity": "error",
                                      "variant": "outlined",
                                    }
                                  }
                                >
                                  Something went wrong trying to preview cart audio. Please try again later.
                                </MuiAlertMessage>,
                                null,
                                null,
                              ],
                              "className": "MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined css-y1cess-MuiAlert-root",
                              "component": "div",
                              "data-test": "preview-error",
                              "elevation": 0,
                              "role": "alert",
                              "square": true,
                              "variant": "elevation",
                            }
                          }
                          role="alert"
                        >
                          <div
                            className="MuiPaper-root MuiPaper-elevation MuiPaper-elevation0 MuiAlert-root MuiAlert-outlinedError MuiAlert-outlined css-134l0rj-MuiPaper-root-MuiAlert-root"
                            data-test="preview-error"
                            role="alert"
                          >
                            <MuiAlertIcon
                              className="MuiAlert-icon"
                              ownerState={
                                Object {
                                  "children": "Something went wrong trying to preview cart audio. Please try again later.",
                                  "color": undefined,
                                  "data-test": "preview-error",
                                  "severity": "error",
                                  "variant": "outlined",
                                }
                              }
                            >
                              <div
                                className="MuiAlert-icon css-1ytlwq5-MuiAlert-icon"
                              >
                                <ForwardRef(ErrorOutlineIcon)
                                  fontSize="inherit"
                                >
                                  <ForwardRef(SvgIcon)
                                    data-testid="ErrorOutlineIcon"
                                    fontSize="inherit"
                                  >
                                    <MuiSvgIconRoot
                                      aria-hidden={true}
                                      as="svg"
                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                      data-testid="ErrorOutlineIcon"
                                      focusable="false"
                                      ownerState={
                                        Object {
                                          "children": <path
                                            d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                          />,
                                          "color": "inherit",
                                          "component": "svg",
                                          "data-testid": "ErrorOutlineIcon",
                                          "fontSize": "inherit",
                                          "viewBox": "0 0 24 24",
                                        }
                                      }
                                      viewBox="0 0 24 24"
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit css-1vooibu-MuiSvgIcon-root"
                                        data-testid="ErrorOutlineIcon"
                                        focusable="false"
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                        />
                                      </svg>
                                    </MuiSvgIconRoot>
                                  </ForwardRef(SvgIcon)>
                                </ForwardRef(ErrorOutlineIcon)>
                              </div>
                            </MuiAlertIcon>
                            <MuiAlertMessage
                              className="MuiAlert-message"
                              ownerState={
                                Object {
                                  "children": "Something went wrong trying to preview cart audio. Please try again later.",
                                  "color": undefined,
                                  "data-test": "preview-error",
                                  "severity": "error",
                                  "variant": "outlined",
                                }
                              }
                            >
                              <div
                                className="MuiAlert-message css-acap47-MuiAlert-message"
                              >
                                Something went wrong trying to preview cart audio. Please try again later.
                              </div>
                            </MuiAlertMessage>
                          </div>
                        </MuiPaperRoot>
                      </ForwardRef(Paper)>
                    </MuiAlertRoot>
                  </ForwardRef(Alert)>
                </div>
              </div>
            </MuiPaperRoot>
          </ForwardRef(Paper)>
        </MuiDrawerPaper>
      </div>
    </MuiDrawerDocked>
  </ForwardRef(Drawer)>
</PreviewPlayer>
`;
